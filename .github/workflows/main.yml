name: workflow

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    steps:
     - name: Check out the repo
       uses: actions/checkout@v2

     - name: Set Relase version
       id: vars
       run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
       
     - name: Configure AWS credential
       uses: aws-actions/configure-aws-credentials@v1
       with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
 
     - name: Build, tag, and push image to Amazon ECRs
       id: build-image
       env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: strapiapp
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag  }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
       run: |
          echo $IMAGE_TAG
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-ouhttps://axellarsson.com/blog/github-actions-build-docker-image-and-push-to-private-registry/tput name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


     - name: terraform initialization 
       run: cd strapi-terraform/ && terraform init 

     - name: Terraform validation
       run: cd strapi-terraform/ && terraform validate

     - name: terraform deployment
       run: cd strapi-terraform/ && terraform apply -auto-approve
